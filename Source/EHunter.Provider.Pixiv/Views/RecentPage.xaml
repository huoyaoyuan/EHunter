<Page
    x:Class="EHunter.Provider.Pixiv.Views.RecentPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:EHunter.Provider.Pixiv.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:m="using:Meowtrix.PixivApi.Models"
    xmlns:sys="using:System"
    xmlns:tkc="using:Microsoft.Toolkit.Collections"
    xmlns:vm="using:EHunter.Provider.Pixiv.ViewModels"
    xmlns:tktr="using:Microsoft.Toolkit.Uwp.UI.Triggers"
    xmlns:controls="using:EHunter.Provider.Pixiv.Controls"
    xmlns:res="using:EHunter.Provider.Pixiv.Resources"
    mc:Ignorable="d"
    NavigationCacheMode="Required"
    x:DefaultBindMode="OneWay"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <res:Resources>
            <CollectionViewSource
                x:Name="cvs"
                Source="{x:Bind _vm.GroupedIllusts}"
                IsSourceGrouped="True" />
        </res:Resources>
    </Page.Resources>
    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="WaitingForLogin">
                    <VisualState.StateTriggers>
                        <tktr:IsEqualStateTrigger
                            To="{x:Bind vm:RecentPageState.WaitingLogin, Mode=OneTime}"
                            Value="{x:Bind _vm.State}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="waitingPanel.Visibility" Value="Visible" />
                        <Setter Target="waitingText.Text" x:Uid="WaitingForLoginSetter" />
                        <Setter Target="waitingProgress.IsActive" Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="LoginFailed">
                    <VisualState.StateTriggers>
                        <tktr:IsEqualStateTrigger
                            To="{x:Bind vm:RecentPageState.NotLogin, Mode=OneTime}"
                            Value="{x:Bind _vm.State}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="waitingPanel.Visibility" Value="Visible" />
                        <Setter Target="waitingText.Text" x:Uid="NotLoginSetter" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="InitialLoading">
                    <VisualState.StateTriggers>
                        <tktr:IsEqualStateTrigger
                            To="{x:Bind vm:RecentPageState.InitialLoading, Mode=OneTime}"
                            Value="{x:Bind _vm.State}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="waitingPanel.Visibility" Value="Visible" />
                        <Setter Target="waitingText.Text" x:Uid="LoadingSetter" />
                        <Setter Target="waitingProgress.IsActive" Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Showing">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="True" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="illustrationGrid.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal"
                    Margin="4"
                    Spacing="4">
            <Button x:Uid="RefreshButton"
                    Tapped="{x:Bind _vm.Refresh}">
                <SymbolIcon Symbol="Refresh" />
            </Button>
            <ComboBox
                Style="{StaticResource AgeRestrictionSelectorStyle}"
                SelectedItem="{x:Bind _vm.IntSelectedAge, Mode=TwoWay}" />
        </StackPanel>
        <Grid x:Name="waitingPanel"
              Grid.Row="1"
              Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <TextBlock
                x:Name="waitingText"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Style="{StaticResource SubheaderTextBlockStyle}"
                Margin="4" />
            <ProgressRing
                x:Name="waitingProgress"
                Grid.Row="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Margin="4" />
        </Grid>
        <SemanticZoom
            x:Name="illustrationGrid"
            Grid.Row="1"
            Visibility="Collapsed">
            <SemanticZoom.ZoomedInView>
                <GridView
                    x:Name="gridView"
                    ItemsSource="{x:Bind cvs.View}"
                    IsItemClickEnabled="True"
                    ItemClick="GridView_ItemClick">
                    <GridView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate x:DataType="tkc:IReadOnlyObservableGroup">
                                    <TextBlock
                                        Style="{StaticResource SubtitleTextBlockStyle}"
                                        Text="{x:Bind (sys:DateTime)Key.ToLongDateString()}" />
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </GridView.GroupStyle>
                    <GridView.ItemTemplate>
                        <DataTemplate x:DataType="m:Illust"
                                      x:DefaultBindMode="OneTime">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <controls:IllustSummary
                                    Illust="{x:Bind}" />
                                <HyperlinkButton
                                    Grid.Row="2"
                                    HorizontalAlignment="Center"
                                    Content="{x:Bind User.Name}"
                                    Command="{StaticResource NavigateToUserCommand}"
                                    CommandParameter="{x:Bind User}"
                                    Click="NavigateToUser_Click" />
                            </Grid>
                        </DataTemplate>
                    </GridView.ItemTemplate>
                </GridView>
            </SemanticZoom.ZoomedInView>

            <SemanticZoom.ZoomedOutView>
                <ListView
                    ItemsSource="{x:Bind cvs.View.CollectionGroups}">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="ICollectionViewGroup">
                            <TextBlock
                                Text="{x:Bind (sys:DateTime)Group.(tkc:IReadOnlyObservableGroup.Key).ToLongDateString()}" />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </SemanticZoom.ZoomedOutView>
        </SemanticZoom>
        <Grid
            x:Name="detailZone"
            Grid.RowSpan="2"
            Visibility="Collapsed">
            <FlipView
                ItemsSource="{x:Bind cvs.View}">
                <FlipView.ItemTemplate>
                    <DataTemplate x:DataType="m:Illust"
                                  x:DefaultBindMode="OneTime">
                        <FlipView
                            ItemsSource="{x:Bind Pages}">
                            <FlipView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </FlipView.ItemsPanel>
                            <FlipView.ItemTemplate>
                                <DataTemplate x:DataType="m:IllustPage">
                                    <controls:PixivImage
                                        ImageInfo="{x:Bind Large}" />
                                </DataTemplate>
                            </FlipView.ItemTemplate>
                        </FlipView>
                    </DataTemplate>
                </FlipView.ItemTemplate>
            </FlipView>
            <Button
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Margin="10"
                Click="{x:Bind CloseDetail}">
                <SymbolIcon Symbol="Cancel" />
            </Button>
        </Grid>
    </Grid>
</Page>
