<Page
    x:Class="EHunter.Provider.Pixiv.Views.OpenedIllustsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:EHunter.Provider.Pixiv.Controls"
    xmlns:themes="using:EHunter.Provider.Pixiv.Themes"
    xmlns:m="using:Meowtrix.PixivApi.Models"
    mc:Ignorable="d"
    NavigationCacheMode="Required"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <Style TargetType="ListViewItem" x:Key="ListViewItemGridStyle">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Background" Value="{ThemeResource GridViewItemBackground}" />
            <Setter Property="Foreground" Value="{ThemeResource GridViewItemForeground}" />
            <Setter Property="TabNavigation" Value="Local" />
            <Setter Property="IsHoldingEnabled" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,0,4,4" />
            <Setter Property="MinWidth" Value="{ThemeResource GridViewItemMinWidth}" />
            <Setter Property="MinHeight" Value="{ThemeResource GridViewItemMinHeight}" />
            <Setter Property="AllowDrop" Value="False" />
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="FocusVisualMargin" Value="-2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter ContentTransitions="{TemplateBinding ContentTransitions}" x:Name="Root" Control.IsTemplateFocusTarget="True" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" SelectionCheckMarkVisualEnabled="{ThemeResource GridViewItemSelectionCheckMarkVisualEnabled}" CheckBrush="{ThemeResource GridViewItemCheckBrush}" CheckBoxBrush="{ThemeResource GridViewItemCheckBoxBrush}" DragBackground="{ThemeResource GridViewItemDragBackground}" DragForeground="{ThemeResource GridViewItemDragForeground}" FocusBorderBrush="{ThemeResource GridViewItemFocusBorderBrush}" FocusSecondaryBorderBrush="{ThemeResource GridViewItemFocusSecondaryBorderBrush}" PlaceholderBackground="{ThemeResource GridViewItemPlaceholderBackground}" PointerOverBackground="{ThemeResource GridViewItemBackgroundPointerOver}" PointerOverForeground="{ThemeResource GridViewItemForegroundPointerOver}" SelectedBackground="{ThemeResource GridViewItemBackgroundSelected}" SelectedForeground="{ThemeResource GridViewItemForegroundSelected}" SelectedPointerOverBackground="{ThemeResource GridViewItemBackgroundSelectedPointerOver}" PressedBackground="{ThemeResource GridViewItemBackgroundPressed}" SelectedPressedBackground="{ThemeResource GridViewItemBackgroundSelectedPressed}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" ReorderHintOffset="{ThemeResource GridViewItemReorderHintThemeOffset}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" ContentMargin="{TemplateBinding Padding}" CheckMode="{ThemeResource GridViewItemCheckMode}" RevealBackground="{ThemeResource GridViewItemRevealBackground}" RevealBorderThickness="{ThemeResource GridViewItemRevealBorderThemeThickness}" RevealBorderBrush="{ThemeResource GridViewItemRevealBorderBrush}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Selected" />
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled" />
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBorderThickness" Value="0" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <CommandBar
            DefaultLabelPosition="Right"
            Grid.ColumnSpan="3">
            <CommandBar.Content>
                <AutoSuggestBox
                    x:Uid="GoToIllustById"
                    Margin="4"
                    Width="200"
                    Text="{x:Bind _vm.IdToOpenText, Mode=TwoWay}"
                    QueryIcon="Forward"
                    QuerySubmitted="{x:Bind _vm.OpenFromId}" />
            </CommandBar.Content>
            <AppBarButton
                x:Name="closeButton"
                IsEnabled="False"
                Icon="Cancel"
                x:Uid="CloseAppBarButton"
                Click="{x:Bind CloseImage}">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="W" Modifiers="Control" />
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>
        </CommandBar>
        <ListView
            Grid.Row="1"
            ItemsSource="{x:Bind _vm.Illusts}"
            SelectedItem="{x:Bind _vm.SelectedIllust, Mode=TwoWay}"
            SelectedIndex="{x:Bind _vm.SelectedIndex, Mode=TwoWay}"
            ItemContainerStyle="{StaticResource ListViewItemGridStyle}">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="m:Illust">
                    <controls:PixivImage
                        Height="100"
                        Width="100"
                        ImageInfo="{x:Bind themes:IllustSummaryTheme.FirstPageMedium(Pages)}" />
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <ContentControl
            Grid.Row="1"
            Grid.Column="1"
            HorizontalContentAlignment="Stretch"
            VerticalContentAlignment="Stretch"
            Content="{x:Bind _vm.SelectedIllust, FallbackValue={x:Null}, Mode=OneWay}">
            <ContentControl.ContentTemplateSelector>
                <controls:AnimatableIllustTemplateSelector>
                    <controls:AnimatableIllustTemplateSelector.NonAnimatedTemplate>
                        <DataTemplate x:DataType="m:Illust"
                                      x:DefaultBindMode="OneTime">
                            <FlipView
                                Background="Transparent"
                                ItemsSource="{x:Bind Pages}">
                                <FlipView.ItemTemplate>
                                    <DataTemplate x:DataType="m:IllustPage">
                                        <controls:PixivImage
                                            ImageInfo="{x:Bind Original}" />
                                    </DataTemplate>
                                </FlipView.ItemTemplate>
                            </FlipView>
                        </DataTemplate>
                    </controls:AnimatableIllustTemplateSelector.NonAnimatedTemplate>
                    <controls:AnimatableIllustTemplateSelector.AnimatedTemplate>
                        <DataTemplate x:DataType="m:Illust"
                                      x:DefaultBindMode="OneTime">
                            <controls:AnimatedIllust Illust="{x:Bind}" />  
                        </DataTemplate>
                    </controls:AnimatableIllustTemplateSelector.AnimatedTemplate>
                </controls:AnimatableIllustTemplateSelector>
            </ContentControl.ContentTemplateSelector>
        </ContentControl>
    </Grid>
</Page>
